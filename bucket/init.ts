import * as bkt from "./bkt/structs";
import * as bottle from "./bottle/structs";
import * as buckEvents from "./buck-events/structs";
import * as buck from "./buck/structs";
import * as bucketEvents from "./bucket-events/structs";
import * as bucket from "./bucket/structs";
import * as interest from "./interest/structs";
import * as pipeEvents from "./pipe-events/structs";
import * as pipe from "./pipe/structs";
import * as reservoirEvents from "./reservoir-events/structs";
import * as reservoir from "./reservoir/structs";
import * as strap from "./strap/structs";
import * as tankEvents from "./tank-events/structs";
import * as tank from "./tank/structs";
import * as wellEvents from "./well-events/structs";
import * as well from "./well/structs";
import {StructClassLoader} from "../_framework/loader";

export function registerClasses(loader: StructClassLoader) { loader.register(reservoirEvents.ChargeReservior);
loader.register(reservoirEvents.DischargeReservior);
loader.register(interest.InterestTable);
loader.register(interest.BottleInterestIndex);
loader.register(pipeEvents.Output);
loader.register(pipeEvents.Input);
loader.register(pipe.PipeType);
loader.register(pipe.Pipe);
loader.register(pipe.OutputCarrier);
loader.register(pipe.InputCarrier);
loader.register(bkt.BKT);
loader.register(bkt.BktTreasury);
loader.register(bkt.BktAdminCap);
loader.register(strap.STRAP);
loader.register(strap.BottleStrap);
loader.register(buckEvents.FlashLoan);
loader.register(buckEvents.BuckMinted);
loader.register(buckEvents.BuckBurnt);
loader.register(buckEvents.CollateralIncreased);
loader.register(buckEvents.CollateralDecreased);
loader.register(buckEvents.FlashMint);
loader.register(buckEvents.ParamUpdated);
loader.register(buckEvents.Liquidation);
loader.register(reservoir.Reservoir);
loader.register(reservoir.FeeConfigKey);
loader.register(reservoir.FeeConfig);
loader.register(tankEvents.Deposite);
loader.register(tankEvents.Withdraw);
loader.register(tankEvents.Absorb);
loader.register(tankEvents.TankUpdate);
loader.register(tankEvents.CollectBKT);
loader.register(tank.Tank);
loader.register(tank.ContributorToken);
loader.register(tank.FlashReceipt);
loader.register(tank.EpochAndScale);
loader.register(tank.DigestKey);
loader.register(tank.TANK);
loader.register(wellEvents.CollectFee);
loader.register(wellEvents.Stake);
loader.register(wellEvents.Unstake);
loader.register(wellEvents.Claim);
loader.register(wellEvents.Penalty);
loader.register(wellEvents.CollectFeeFrom);
loader.register(well.Well);
loader.register(well.StakedBKT);
loader.register(well.WELL);
loader.register(bottle.BottleTable);
loader.register(bottle.Bottle);
loader.register(bucketEvents.BottleCreated);
loader.register(bucketEvents.BottleUpdated);
loader.register(bucketEvents.BottleDestroyed);
loader.register(bucketEvents.SurplusBottleGenerated);
loader.register(bucketEvents.SurplusBottleWithdrawal);
loader.register(bucketEvents.Redeem);
loader.register(bucketEvents.FeeRateChanged);
loader.register(bucketEvents.Redistribution);
loader.register(bucket.FlashReceipt);
loader.register(bucket.Bucket);
loader.register(bucket.PendingRecord);
loader.register(bucket.OutputKey);
loader.register(bucket.OutputVolume);
loader.register(buck.AdminCap);
loader.register(buck.BUCK);
loader.register(buck.BucketProtocol);
loader.register(buck.BucketType);
loader.register(buck.WellType);
loader.register(buck.TankType);
loader.register(buck.FlashMintConfig);
loader.register(buck.FlashMintReceipt);
loader.register(buck.NoFeePermission);
loader.register(buck.ReservoirType);
loader.register(buck.SBuckRateKey);
loader.register(buck.SBuckEmission);
loader.register(buck.BUCKET_PROTOCOL);
loader.register(buck.TestVersion);
 }
